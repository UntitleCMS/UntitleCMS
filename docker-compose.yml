version: '3.4'

services:
  gateway:
    image: ${DOCKER_REGISTRY-}gateway
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    networks:
      - backend
      - front
    depends_on:
      - blogservice
      - authenticationservice
    environment:
        AUTH_ISSUER: https://p.villsource.tk/api/auth/v2

  frontend:
    image: villsource/beta-blog
    networks:
      - front


  blogservice:
    image: villsource/blogservice
    environment:
      DB_CONNECTION_STRING: Server=blog-database;Database=BlogService;User=sa;Password=P@ssword;TrustServerCertificate=True;
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      AUTH_SERVER: http://authenticationservice
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - backend
    depends_on:
      - blog-database
      - mongo1

  articleservice:
    image: villsource/articleservice
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - backend
    depends_on:
      - blog-database
      - mongo1
    environment:
      DB_CONNECTION_STRING: mongodb://mongo1:50001/?replicaSet=my-mongo-set
      MQ_HOST: rabit-mq

  commentservice:
    image: villsource/commentservice
    environment:
        - DB_CONNECTION_STRING=mongodb://mongo1:50001/comment?replicaSet=my-mongo-set
    networks:
        - backend


  authenticationservice:
    image: villsource/authenticationservice
    environment: 
      DB_CONNECTION_STRING: Server=blog-database;Database=authentication;User=sa;Password=P@ssword;TrustServerCertificate=True;
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ISSURE: http://authenticationservice 
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - backend
    depends_on:
      - blog-database

  picturestorageservice:
    image: villsource/picturestorageservice
    environment:
      DB_CONNECTION_STRING: mongodb://user:pass@mongodb/admin
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    ports:
      - "30000:80"
    volumes:
      - C:\Users\Anirut\Pictures\img-storage:/img-storage
    depends_on:
      - mongodb
    networks:
      - backend


  coderunnerservice:
    image: villsource/coderunnerservice
    ports:
      - 3000:3000
    environment:
      CODE_REPO: /sourcecodes
      SLAVE_USER_NAME: runner
      SLAVE_HOST_PYTHON: python-slave
      SLAVE_HOST_JAVA: java-slave
      SLAVE_HOST_GCC: gcc-slave
    volumes:
      - ./CompilerContainer/Keys:/keys
      - ./CompilerContainer/SourceCode:/sourcecodes
    networks:
      - backend
      - runner




  blog-database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=P@ssword
    ports:
      - "1434:1433"
    volumes:
      - "blog-service:/var/opt/mssql"
    networks:
      - backend

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - db:/data/db
    ports:
      - 27017:27017
    networks:
      - backend


  mongo1:
    image: mongo
    hostname: mongo1
    volumes:
      - ./mongo_database/data/m1:/data/db
      - ./mongo_database/config/m1:/data/configdb
      - ./mongo_database/log/m1:/data/db/log
      - ./mongo_database/scripts/:/scripts
    environment:
      MONGO_INITDB_DATABASE: admin
      IS_PRIMARY: true
    ports:
      - 50001:50001
    command: bash /scripts/endpoint.sh
    networks:
      - backend

  rabit-mq:
    hostname: rabit-mq
    image: rabbitmq:3-management
    ports:
      - 15672:15672
      - 5672:5672


  python-slave:
    image: python-slave
    build:
      context: ./CompilerContainer
      dockerfile: Python.Dockerfile
    environment:
      USER_NAME: runner
    volumes:
      - ./CompilerContainer/Keys:/config/.ssh
      - ./CompilerContainer/SourceCode:/config/sourcecode
    networks:
      - runner

  java-slave:
    image: java-slave
    build:
      context: ./CompilerContainer
      dockerfile: Java.Dockerfile
    environment:
      USER_NAME: runner
    volumes:
      - ./CompilerContainer/Keys:/config/.ssh
      - ./CompilerContainer/SourceCode:/config/sourcecode
    networks:
      - runner

  gcc-slave:
    image: gcc-slave
    build:
      context: ./CompilerContainer
      dockerfile: GCC.Dockerfile
    environment:
      USER_NAME: runner
    volumes:
      - ./CompilerContainer/Keys:/config/.ssh
      - ./CompilerContainer/SourceCode:/config/sourcecode
    networks:
    - runner


volumes:
  blog-service:
  db:

networks:
  backend:
  runner:
  front:

